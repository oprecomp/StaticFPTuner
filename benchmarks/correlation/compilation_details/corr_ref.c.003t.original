
;; Function int getchar() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = _IO_getc (stdin)>>;


;; Function int fgetc_unlocked(FILE*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_expect (__fp->_IO_read_ptr >= __fp->_IO_read_end, 0) != 0 ? __uflow (__fp) : (int) *(unsigned char *) __fp->_IO_read_ptr++ >>;


;; Function int getc_unlocked(FILE*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_expect (__fp->_IO_read_ptr >= __fp->_IO_read_end, 0) != 0 ? __uflow (__fp) : (int) *(unsigned char *) __fp->_IO_read_ptr++ >>;


;; Function int getchar_unlocked() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_expect (stdin->_IO_read_ptr >= stdin->_IO_read_end, 0) != 0 ? __uflow (stdin) : (int) *(unsigned char *) stdin->_IO_read_ptr++ >>;


;; Function int putchar(int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = _IO_putc (__c, stdout)>>;


;; Function int fputc_unlocked(int, FILE*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_expect (__stream->_IO_write_ptr >= __stream->_IO_write_end, 0) != 0 ? __overflow (__stream, (int) (unsigned char) __c) : (int) (unsigned char) (*__stream->_IO_write_ptr++  = (char) __c)>>;


;; Function int putc_unlocked(int, FILE*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_expect (__stream->_IO_write_ptr >= __stream->_IO_write_end, 0) != 0 ? __overflow (__stream, (int) (unsigned char) __c) : (int) (unsigned char) (*__stream->_IO_write_ptr++  = (char) __c)>>;


;; Function int putchar_unlocked(int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_expect (stdout->_IO_write_ptr >= stdout->_IO_write_end, 0) != 0 ? __overflow (stdout, (int) (unsigned char) __c) : (int) (unsigned char) (*stdout->_IO_write_ptr++  = (char) __c)>>;


;; Function __ssize_t getline(char**, size_t*, FILE*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __getdelim (__lineptr, __n, 10, __stream)>>;


;; Function int feof_unlocked(FILE*) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  return <retval> = (__stream->_flags & 16) != 0
   >>>;


;; Function int ferror_unlocked(FILE*) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  return <retval> = (__stream->_flags & 32) != 0
   >>>;


;; Function int sprintf(char*, const char*, ...) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = __builtin___sprintf_chk (__s, 1, __builtin_object_size ((const void *) __s, 1), __fmt, __builtin_va_arg_pack ())>>
   >>>;


;; Function int vsprintf(char*, const char*, __va_list_tag*) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = __builtin___vsprintf_chk (__s, 1, __builtin_object_size ((const void *) __s, 1), __fmt, __ap)>>
   >>>;


;; Function int snprintf(char*, size_t, const char*, ...) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = __builtin___snprintf_chk (__s, __n, 1, __builtin_object_size ((const void *) __s, 1), __fmt, __builtin_va_arg_pack ())>>
   >>>;


;; Function int vsnprintf(char*, size_t, const char*, __va_list_tag*) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = __builtin___vsnprintf_chk (__s, __n, 1, __builtin_object_size ((const void *) __s, 1), __fmt, __ap)>>
   >>>;


;; Function int fprintf(FILE*, const char*, ...) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __fprintf_chk (__stream, 1, __fmt, __builtin_va_arg_pack ())>>;


;; Function int printf(const char*, ...) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __printf_chk (1, __fmt, __builtin_va_arg_pack ())>>;


;; Function int vprintf(const char*, __va_list_tag*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __vfprintf_chk (stdout, 1, __fmt, __ap)>>;


;; Function int vfprintf(FILE*, const char*, __va_list_tag*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __vfprintf_chk (__stream, 1, __fmt, __ap)>>;


;; Function int dprintf(int, const char*, ...) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __dprintf_chk (__fd, 1, __fmt, __builtin_va_arg_pack ())>>;


;; Function int vdprintf(int, const char*, __va_list_tag*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __vdprintf_chk (__fd, 1, __fmt, __ap)>>;


;; Function int asprintf(char**, const char*, ...) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = __asprintf_chk (__ptr, 1, __fmt, __builtin_va_arg_pack ())>>
   >>>;


;; Function int __asprintf(char**, const char*, ...) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = __asprintf_chk (__ptr, 1, __fmt, __builtin_va_arg_pack ())>>
   >>>;


;; Function int obstack_printf(obstack*, const char*, ...) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = __obstack_printf_chk (__obstack, 1, __fmt, __builtin_va_arg_pack ())>>
   >>>;


;; Function int vasprintf(char**, const char*, __va_list_tag*) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = __vasprintf_chk (__ptr, 1, __fmt, __ap)>>
   >>>;


;; Function int obstack_vprintf(obstack*, const char*, __va_list_tag*) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = __obstack_vprintf_chk (__obstack, 1, __fmt, __ap)>>
   >>>;


;; Function char* fgets(char*, int, FILE*) (null)
;; enabled by -tree-original


if (__builtin_object_size ((const void *) __s, 1) != 18446744073709551615)
  {
    if (__builtin_constant_p (__n) == 0 || __n <= 0)
      {
        <<cleanup_point return <retval> = __fgets_chk (__s, __builtin_object_size ((const void *) __s, 1), __n, __stream)>>;
      }
    if ((size_t) __n > __builtin_object_size ((const void *) __s, 1))
      {
        <<cleanup_point return <retval> = __fgets_chk_warn (__s, __builtin_object_size ((const void *) __s, 1), __n, __stream)>>;
      }
  }
<<cleanup_point return <retval> = __fgets_alias (__s, __n, __stream)>>;


;; Function size_t fread(void*, size_t, size_t, FILE*) (null)
;; enabled by -tree-original


if (__builtin_object_size ((const void *) __ptr, 0) != 18446744073709551615)
  {
    if ((__builtin_constant_p (__size) == 0 || __builtin_constant_p (__n) == 0) || (__size | __n) >> (int) ((8 * 8) / 2) != 0)
      {
        <<cleanup_point return <retval> = __fread_chk (__ptr, __builtin_object_size ((const void *) __ptr, 0), __size, __n, __stream)>>;
      }
    if (__size * __n > __builtin_object_size ((const void *) __ptr, 0))
      {
        <<cleanup_point return <retval> = __fread_chk_warn (__ptr, __builtin_object_size ((const void *) __ptr, 0), __size, __n, __stream)>>;
      }
  }
<<cleanup_point return <retval> = __fread_alias (__ptr, __size, __n, __stream)>>;


;; Function char* fgets_unlocked(char*, int, FILE*) (null)
;; enabled by -tree-original


if (__builtin_object_size ((const void *) __s, 1) != 18446744073709551615)
  {
    if (__builtin_constant_p (__n) == 0 || __n <= 0)
      {
        <<cleanup_point return <retval> = __fgets_unlocked_chk (__s, __builtin_object_size ((const void *) __s, 1), __n, __stream)>>;
      }
    if ((size_t) __n > __builtin_object_size ((const void *) __s, 1))
      {
        <<cleanup_point return <retval> = __fgets_unlocked_chk_warn (__s, __builtin_object_size ((const void *) __s, 1), __n, __stream)>>;
      }
  }
<<cleanup_point return <retval> = __fgets_unlocked_alias (__s, __n, __stream)>>;


;; Function size_t fread_unlocked(void*, size_t, size_t, FILE*) (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __ptr, 0) != 18446744073709551615)
    {
      if ((__builtin_constant_p (__size) == 0 || __builtin_constant_p (__n) == 0) || (__size | __n) >> (int) ((8 * 8) / 2) != 0)
        {
          <<cleanup_point return <retval> = __fread_unlocked_chk (__ptr, __builtin_object_size ((const void *) __ptr, 0), __size, __n, __stream)>>;
        }
      if (__size * __n > __builtin_object_size ((const void *) __ptr, 0))
        {
          <<cleanup_point return <retval> = __fread_unlocked_chk_warn (__ptr, __builtin_object_size ((const void *) __ptr, 0), __size, __n, __stream)>>;
        }
    }
  {
    if (((__builtin_constant_p (__size) != 0 && __builtin_constant_p (__n) != 0) && (__size | __n) >> (int) ((8 * 8) / 2) == 0) && __size * __n <= 8)
      {
        {
          size_t __cnt = __size * __n;
          char * __cptr = (char *) __ptr;

                    size_t __cnt = __size * __n;
                    char * __cptr = (char *) __ptr;
          if (__cnt == 0)
            {
              return <retval> = 0;
            }
          {
            goto <D.2758>;
            <D.2757>:;
            {
              int __c;

                            int __c;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__c = __builtin_expect (__stream->_IO_read_ptr >= __stream->_IO_read_end, 0) != 0 ? __uflow (__stream) : (int) *(unsigned char *) __stream->_IO_read_ptr++ ) >>>>>;
              if (__c == -1) goto <D.2755>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__cptr++  = (char) __c) >>>>>;
            }
            <<cleanup_point (void)  --__cnt>>;
            <D.2758>:;
            if (__cnt != 0) goto <D.2757>; else goto <D.2755>;
            <D.2755>:;
          }
          return <retval> = (long unsigned int) ((long int) __cptr - (long int) __ptr) / __size;
        }
      }
  }
  <<cleanup_point return <retval> = __fread_unlocked_alias (__ptr, __size, __n, __stream)>>;
}


;; Function unsigned int __bswap_32(unsigned int) (null)
;; enabled by -tree-original


return <retval> = __builtin_bswap32 (__bsx);


;; Function __uint64_t __bswap_64(__uint64_t) (null)
;; enabled by -tree-original


return <retval> = __builtin_bswap64 (__bsx);


;; Function int atoi(const char*) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = (int) strtol (__nptr, 0B, 10)>>
   >>>;


;; Function long int atol(const char*) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = strtol (__nptr, 0B, 10)>>
   >>>;


;; Function long long int atoll(const char*) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = strtoll (__nptr, 0B, 10)>>
   >>>;


;; Function unsigned int gnu_dev_major(long long unsigned int) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  return <retval> = (unsigned int) (__dev >> 8) & 4095 | (unsigned int) (__dev >> 32) & 4294963200
   >>>;


;; Function unsigned int gnu_dev_minor(long long unsigned int) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  return <retval> = (unsigned int) __dev & 255 | (unsigned int) (__dev >> 12) & 4294967040
   >>>;


;; Function long long unsigned int gnu_dev_makedev(unsigned int, unsigned int) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  return <retval> = ((long long unsigned int) (__minor & 255 | (__major & 4095) << 8) | ((long long unsigned int) __minor & 4294967040) << 12) | ((long long unsigned int) __major & 4294963200) << 32
   >>>;


;; Function void* bsearch(const void*, const void*, size_t, size_t, __compar_fn_t) (null)
;; enabled by -tree-original


{
  size_t __l;
  size_t __u;
  size_t __idx;
  const void * __p;
  int __comparison;

    size_t __l;
    size_t __u;
    size_t __idx;
    const void * __p;
    int __comparison;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__l = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__u = __nmemb) >>>>>;
  goto <D.3292>;
  <D.3293>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__idx = (__l + __u) / 2) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__p = __base + (sizetype) (__idx * __size)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__comparison = __compar (__key, __p)) >>>>>;
  if (__comparison < 0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__u = __idx) >>>>>;
    }
  else
    {
      if (__comparison > 0)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__l = __idx + 1) >>>>>;
        }
      else
        {
          return <retval> = (void *) __p;
        }
    }
  <D.3292>:;
  if (__l < __u) goto <D.3293>; else goto <D.3291>;
  <D.3291>:;
  return <retval> = 0B;
}


;; Function double atof(const char*) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = strtod (__nptr, 0B)>>
   >>>;


;; Function char* realpath(const char*, char*) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  if (__builtin_object_size ((const void *) __resolved, 1) != 18446744073709551615)
    {
      <<cleanup_point return <retval> = __realpath_chk (__name, __resolved, __builtin_object_size ((const void *) __resolved, 1))>>;
    }
  <<cleanup_point return <retval> = __realpath_alias (__name, __resolved)>>;
   >>>;


;; Function int ptsname_r(int, char*, size_t) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  if (__builtin_object_size ((const void *) __buf, 1) != 18446744073709551615)
    {
      if (__builtin_constant_p (__buflen) == 0)
        {
          <<cleanup_point return <retval> = __ptsname_r_chk (__fd, __buf, __buflen, __builtin_object_size ((const void *) __buf, 1))>>;
        }
      if (__builtin_object_size ((const void *) __buf, 1) < __buflen)
        {
          <<cleanup_point return <retval> = __ptsname_r_chk_warn (__fd, __buf, __buflen, __builtin_object_size ((const void *) __buf, 1))>>;
        }
    }
  <<cleanup_point return <retval> = __ptsname_r_alias (__fd, __buf, __buflen)>>;
   >>>;


;; Function int wctomb(char*, wchar_t) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  if (__builtin_object_size ((const void *) __s, 1) != 18446744073709551615 && __builtin_object_size ((const void *) __s, 1) <= 15)
    {
      <<cleanup_point return <retval> = __wctomb_chk (__s, __wchar, __builtin_object_size ((const void *) __s, 1))>>;
    }
  <<cleanup_point return <retval> = __wctomb_alias (__s, __wchar)>>;
   >>>;


;; Function size_t mbstowcs(wchar_t*, const char*, size_t) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  if (__builtin_object_size ((const void *) __dst, 1) != 18446744073709551615)
    {
      if (__builtin_constant_p (__len) == 0)
        {
          <<cleanup_point return <retval> = __mbstowcs_chk (__dst, __src, __len, __builtin_object_size ((const void *) __dst, 1) / 4)>>;
        }
      if (__builtin_object_size ((const void *) __dst, 1) / 4 < __len)
        {
          <<cleanup_point return <retval> = __mbstowcs_chk_warn (__dst, __src, __len, __builtin_object_size ((const void *) __dst, 1) / 4)>>;
        }
    }
  <<cleanup_point return <retval> = __mbstowcs_alias (__dst, __src, __len)>>;
   >>>;


;; Function size_t wcstombs(char*, const wchar_t*, size_t) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  if (__builtin_object_size ((const void *) __dst, 1) != 18446744073709551615)
    {
      if (__builtin_constant_p (__len) == 0)
        {
          <<cleanup_point return <retval> = __wcstombs_chk (__dst, __src, __len, __builtin_object_size ((const void *) __dst, 1))>>;
        }
      if (__builtin_object_size ((const void *) __dst, 1) < __len)
        {
          <<cleanup_point return <retval> = __wcstombs_chk_warn (__dst, __src, __len, __builtin_object_size ((const void *) __dst, 1))>>;
        }
    }
  <<cleanup_point return <retval> = __wcstombs_alias (__dst, __src, __len)>>;
   >>>;


;; Function int __signbitf(float) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  {
    int __m;

        int __m;
    <<cleanup_point __asm__("pmovmskb %1, %0":"=r" __m:"x" __x)>>;
    return <retval> = (__m & 8) != 0;
  }
   >>>;


;; Function int __signbit(double) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  {
    int __m;

        int __m;
    <<cleanup_point __asm__("pmovmskb %1, %0":"=r" __m:"x" __x)>>;
    return <retval> = (__m & 128) != 0;
  }
   >>>;


;; Function int __signbitl(long double) (null)
;; enabled by -tree-original


<<< Unknown tree: eh_spec_block
  {
    typedef union ._26 ._26;
    union ._26 __u;

        union ._26 __u;
    <<cleanup_point <<< Unknown tree: expr_stmt
  __u.__l = __x >>>>>;
    return <retval> = (__u.__i[2] & 32768) != 0;
  }
   >>>;


;; Function void correlation(double*, double*, double*, double*) (null)
;; enabled by -tree-original


{
  int i;
  int j;
  int j1;
  int j2;

    int i;
    int j;
    int j1;
    int j2;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (j = 0) >>>>>;
  goto <D.4664>;
  <D.4663>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(mean + (sizetype) ((long unsigned int) j * 8)) = 0.0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (i = 0) >>>>>;
  goto <D.4662>;
  <D.4661>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(mean + (sizetype) ((long unsigned int) j * 8)) = *(mean + (sizetype) ((long unsigned int) j * 8)) + *(data + (sizetype) ((long unsigned int) (i * 256 + j) * 8))) >>>>>;
  <<cleanup_point (void) i++ >>;
  <D.4662>:;
  if (i <= 255) goto <D.4661>; else goto <D.4659>;
  <D.4659>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(mean + (sizetype) ((long unsigned int) j * 8)) = *(mean + (sizetype) ((long unsigned int) j * 8)) / 3.214212e+6) >>>>>;
  <<cleanup_point (void) j++ >>;
  <D.4664>:;
  if (j <= 255) goto <D.4663>; else goto <D.4657>;
  <D.4657>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (j = 0) >>>>>;
  goto <D.4672>;
  <D.4671>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(stddev + (sizetype) ((long unsigned int) j * 8)) = 0.0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (i = 0) >>>>>;
  goto <D.4670>;
  <D.4669>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(stddev + (sizetype) ((long unsigned int) j * 8)) = *(stddev + (sizetype) ((long unsigned int) j * 8)) + (*(data + (sizetype) ((long unsigned int) (i * 256 + j) * 8)) - *(mean + (sizetype) ((long unsigned int) j * 8))) * (*(data + (sizetype) ((long unsigned int) (i * 256 + j) * 8)) - *(mean + (sizetype) ((long unsigned int) j * 8)))) >>>>>;
  <<cleanup_point (void) i++ >>;
  <D.4670>:;
  if (i <= 255) goto <D.4669>; else goto <D.4667>;
  <D.4667>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(stddev + (sizetype) ((long unsigned int) j * 8)) = *(stddev + (sizetype) ((long unsigned int) j * 8)) / 3.214212e+6) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(stddev + (sizetype) ((long unsigned int) j * 8)) = sqrt (*(stddev + (sizetype) ((long unsigned int) j * 8)))) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(stddev + (sizetype) ((long unsigned int) j * 8)) = *(stddev + (sizetype) ((long unsigned int) j * 8)) <= 4.999999888241291046142578125e-3 ? 1.0e+0 : *(stddev + (sizetype) ((long unsigned int) j * 8))) >>>>>;
  <<cleanup_point (void) j++ >>;
  <D.4672>:;
  if (j <= 255) goto <D.4671>; else goto <D.4665>;
  <D.4665>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (i = 0) >>>>>;
  goto <D.4680>;
  <D.4679>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (j = 0) >>>>>;
  goto <D.4678>;
  <D.4677>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(data + (sizetype) ((long unsigned int) (i * 256 + j) * 8)) = *(data + (sizetype) ((long unsigned int) (i * 256 + j) * 8)) - *(mean + (sizetype) ((long unsigned int) j * 8))) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(data + (sizetype) ((long unsigned int) (i * 256 + j) * 8)) = *(data + (sizetype) ((long unsigned int) (i * 256 + j) * 8)) / (*(stddev + (sizetype) ((long unsigned int) j * 8)) * 1.792822355951642975924187339842319488525390625e+3)) >>>>>;
  <<cleanup_point (void) j++ >>;
  <D.4678>:;
  if (j <= 255) goto <D.4677>; else goto <D.4675>;
  <D.4675>:;
  <<cleanup_point (void) i++ >>;
  <D.4680>:;
  if (i <= 255) goto <D.4679>; else goto <D.4673>;
  <D.4673>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (j1 = 0) >>>>>;
  goto <D.4692>;
  <D.4691>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(symmat + (sizetype) ((long unsigned int) (j1 * 257) * 8)) = 1.0e+0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (j2 = j1 + 1) >>>>>;
  goto <D.4690>;
  <D.4689>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(symmat + (sizetype) ((long unsigned int) (j1 * 256 + j2) * 8)) = 0.0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (i = 0) >>>>>;
  goto <D.4688>;
  <D.4687>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(symmat + (sizetype) ((long unsigned int) (j1 * 256 + j2) * 8)) = *(symmat + (sizetype) ((long unsigned int) (j1 * 256 + j2) * 8)) + *(data + (sizetype) ((long unsigned int) (i * 256 + j1) * 8)) * *(data + (sizetype) ((long unsigned int) (i * 256 + j2) * 8))) >>>>>;
  <<cleanup_point (void) i++ >>;
  <D.4688>:;
  if (i <= 255) goto <D.4687>; else goto <D.4685>;
  <D.4685>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(symmat + (sizetype) ((long unsigned int) (j2 * 256 + j1) * 8)) = *(symmat + (sizetype) ((long unsigned int) (j1 * 256 + j2) * 8))) >>>>>;
  <<cleanup_point (void) j2++ >>;
  <D.4690>:;
  if (j2 <= 255) goto <D.4689>; else goto <D.4683>;
  <D.4683>:;
  <<cleanup_point (void) j1++ >>;
  <D.4692>:;
  if (j1 <= 254) goto <D.4691>; else goto <D.4681>;
  <D.4681>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(symmat + 524280) = 1.0e+0) >>>>>;
}


;; Function int main() (null)
;; enabled by -tree-original


{
  int i;
  double * data;
  double * symmat;
  double * mean;
  double * stddev;

    int i;
    double * data;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (data = (double *) malloc (8 * 65536)) >>>>>;
    double * symmat;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (symmat = (double *) malloc (8 * 65536)) >>>>>;
    double * mean;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (mean = (double *) malloc (8 * 256)) >>>>>;
    double * stddev;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (stddev = (double *) malloc (8 * 256)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  srand (5497) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (i = 0) >>>>>;
  goto <D.4703>;
  <D.4702>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(data + (sizetype) ((long unsigned int) i * 8)) = (double) rand () / 2.147483647e+9) >>>>>;
  <<cleanup_point (void) i++ >>;
  <D.4703>:;
  if (i <= 65535) goto <D.4702>; else goto <D.4700>;
  <D.4700>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  correlation (data, mean, stddev, symmat) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (i = 0) >>>>>;
  goto <D.4707>;
  <D.4706>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) printf ((const char *) "%.15f,", *(symmat + (sizetype) ((long unsigned int) i * 8))) >>>>>;
  <<cleanup_point (void) i++ >>;
  <D.4707>:;
  if (i <= 65535) goto <D.4706>; else goto <D.4704>;
  <D.4704>:;
  return <retval> = 0;
}
return <retval> = 0;

